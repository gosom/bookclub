// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: query.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users
    (email, passwd) 
VALUES 
    ($1, $2)
RETURNING id, email, passwd, created_at, updated_at
`

type CreateUserParams struct {
	Email  string
	Passwd []byte
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Email, arg.Passwd)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Passwd,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, email, passwd, created_at, updated_at FROM users WHERE email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Passwd,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
